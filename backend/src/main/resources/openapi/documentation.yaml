openapi: 3.0.0
info:
  title: backend API Copy
  version: 1.0.0
  description: backend API
servers:
  - url: '{{baseUrl}}'
paths:
  /comments/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: '(Required) '
        example: tempor est ullamco mollit
        schema:
          type: string
    delete:
      summary: DELETE /comments/{id} - Delete a comment
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '204':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: No Content
          content:
            application/json:
              schema:
                type: object
        '400':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Bad Request
        '403':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Forbidden
        '404':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Not Found
    get:
      summary: >-
        --- PUBLIC ENDPOINTS --- // <br> GET /comments/{id} - Get a single
        comment by its ID
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  postId:
                    type: string
                  content:
                    type: string
                  id:
                    type: integer
        '400':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Bad Request
        '404':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Not Found
    put:
      summary: PUT /comments/{id} - Update an existing comment
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
        '400':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Bad Request
        '403':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Forbidden
        '404':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                id:
                  type: integer
  /comments:
    parameters: [ ]
    post:
      summary: POST /comments - Add a new comment
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '201':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  postId:
                    type: string
                  content:
                    type: string
                  id:
                    type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                userId:
                  type: string
                content:
                  type: string
  /comments/post/{postId}:
    parameters:
      - name: postId
        in: path
        required: true
        description: '(Required) '
        example: tempor est ullamco mollit
        schema:
          type: string
    get:
      summary: GET /comments/post/{postId} - Get all comments for a specific post
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    postId:
                      type: string
                    content:
                      type: string
                    id:
                      type: integer
        '400':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Bad Request
  /posts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: '(Required) '
        example: tempor est ullamco mollit
        schema:
          type: string
    delete:
      summary: /posts/:id
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
        '401':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Unauthorized
        '404':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Not Found
    get:
      summary: /posts/:id
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: object
  /posts/{id}/likes:
    parameters:
      - name: id
        in: path
        required: true
        description: '(Required) '
        example: tempor est ullamco mollit
        schema:
          type: string
    post:
      summary: /posts/:id/likes
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '401':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Unauthorized
  /posts:
    parameters: [ ]
    get:
      summary: /posts
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    content:
                      type: string
                    userHandle:
                      type: string
                    createdAt:
                      type: object
                    updatedAt:
                      type: object
                    imageUrl:
                      type: string
                    userDisplayName:
                      type: string
                    hasLiked:
                      type: boolean
                    likesCount:
                      type: integer
                    commentsCount:
                      type: integer
                    repostsCount:
                      type: integer
    post:
      summary: /posts
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '201':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Created
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                userId:
                  type: string
                imageUrl:
                  type: string
  /users/{id}/followers:
    parameters:
      - name: id
        in: path
        required: true
        description: '(Required) '
        example: tempor est ullamco mollit
        schema:
          type: string
    delete:
      summary: /users/:id/followers
      parameters: [ ]
      responses: { }
    get:
      summary: /users/:id/followers
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    createdAt:
                      type: object
                    updatedAt:
                      type: object
                    keycloakId:
                      type: string
                    bio:
                      type: string
                    displayName:
                      type: string
    post:
      summary: /users/:id/followers
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: object
  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: '(Required) '
        example: tempor est ullamco mollit
        schema:
          type: string
    delete:
      summary: /users/:id
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: object
        '404':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Not Found
          content:
            application/json:
              schema:
                type: object
    get:
      summary: /users/:id
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  createdAt:
                    type: object
                  updatedAt:
                    type: object
                  keycloakId:
                    type: string
                  bio:
                    type: string
                  displayName:
                    type: string
        '404':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Not Found
          content:
            application/json:
              schema:
                type: object
    patch:
      summary: /users/:id
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  keycloakId:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  createdAt:
                    type: object
                  updatedAt:
                    type: object
                  bio:
                    type: string
                  displayName:
                    type: string
        '400':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Bad Request
        '404':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                bio:
                  type: string
                displayName:
                  type: string
  /users/{id}/feed:
    parameters:
      - name: id
        in: path
        required: true
        description: '(Required) '
        example: tempor est ullamco mollit
        schema:
          type: string
    get:
      summary: /users/:id/feed
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    content:
                      type: string
                    userHandle:
                      type: string
                    createdAt:
                      type: object
                    updatedAt:
                      type: object
                    imageUrl:
                      type: string
                    userDisplayName:
                      type: string
                    hasLiked:
                      type: boolean
                    likesCount:
                      type: integer
                    commentsCount:
                      type: integer
                    repostsCount:
                      type: integer
        '401':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Unauthorized
  /users/{id}/following:
    parameters:
      - name: id
        in: path
        required: true
        description: '(Required) '
        example: tempor est ullamco mollit
        schema:
          type: string
    get:
      summary: /users/:id/following
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    createdAt:
                      type: object
                    updatedAt:
                      type: object
                    keycloakId:
                      type: string
                    bio:
                      type: string
                    displayName:
                      type: string
  /users/{id}/posts:
    parameters:
      - name: id
        in: path
        required: true
        description: '(Required) '
        example: tempor est ullamco mollit
        schema:
          type: string
    get:
      summary: /users/:id/posts
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    content:
                      type: string
                    userHandle:
                      type: string
                    createdAt:
                      type: object
                    updatedAt:
                      type: object
                    imageUrl:
                      type: string
                    userDisplayName:
                      type: string
                    hasLiked:
                      type: boolean
                    likesCount:
                      type: integer
                    commentsCount:
                      type: integer
                    repostsCount:
                      type: integer
  /users:
    parameters: [ ]
    get:
      summary: /users
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    createdAt:
                      type: object
                    updatedAt:
                      type: object
                    keycloakId:
                      type: string
                    bio:
                      type: string
                    displayName:
                      type: string
    post:
      summary: /users
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  createdAt:
                    type: object
                  updatedAt:
                    type: object
                  keycloakId:
                    type: string
                  bio:
                    type: string
                  displayName:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                keycloakId:
                  type: string
  /auth/callback:
    parameters: [ ]
    get:
      summary: /auth/callback
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
        '401':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Unauthorized
  /auth/login:
    parameters: [ ]
    get:
      summary: /auth/login
      parameters: [ ]
      responses: { }
  /auth/logout:
    parameters: [ ]
    post:
      summary: /auth/logout
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
  /auth/refresh:
    parameters: [ ]
    post:
      summary: /auth/refresh
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: OK
        '401':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Unauthorized
  /images/upload:
    parameters: [ ]
    post:
      summary: /images/upload
      parameters:
        - name: Accept
          in: header
          required: false
          example: '*/*'
          schema:
            type: string
      responses:
        '201':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Created
        '400':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Bad Request
        '500':
          headers:
            Content-Type:
              schema:
                type: string
              example: '*/*'
          description: Internal Server Error
